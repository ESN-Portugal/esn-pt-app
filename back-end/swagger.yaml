openapi: 3.0.3

info:
  title: EGM (CDK) API
  version: 3.0.2
  contact:
    name: ITER IDEA
    email: help@iter-idea.com
    url: https://iter-idea.com

servers:
  # if needed, substitute the correct API URL
  - url: https://api.egm.link/{environment}
    variables:
      environment:
        enum: [dev, prod]
        default: dev
        description: The API stage

externalDocs:
  description: Models documentation
  url: https://github.com/uatisdeproblem/egm/blob/main/back-end/src/models # @todo change this to ESN Repo

tags:
  - name: Status
    description: The app's status
  - name: Login
    description: Access the platform

paths:
  /status:
    get:
      summary: Get the status of the app, depending on its version
      tags: [Status]
      parameters:
        - name: v
          in: query
          description: App version; if not specified, targets the latest version
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/AppStatus'
  /login:
    get:
      summary: Manage the login accepted request from ESN Accounts and prepare a token to authenticate the user
      description: Acquire the CAS ticket, validate it, create the user (if necessary) and return a token.
      tags: [Login]
      parameters:
        - name: ticket
          in: query
          description: The CAS ticket of successful login with ESN Accounts
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/OperationCompleted'

components:
  schemas:
    AppStatus:
      type: object
      additionalProperties: {}
    # choose for each project one kind of documentation style: lazy or detailed
    # 1. lazy documentation example:
    # Book:
    #  type: object
    #  additionalProperties: {}
    # 2. detailed documentation example:

  responses:
    AppStatus:
      description: The app status for the targeted version
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/AppStatus'
    BadParameters:
      description: Bad input parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: The request isn't valid
    OperationCompleted:
      description: Operation completed

  securitySchemes:
    CognitoUserPool:
      type: apiKey
      name: Authorization
      in: header
    AuthFunction:
      type: apiKey
      name: Authorization
      in: header
