type UserProfile @model @auth(rules: [{allow: owner}]) {
  id: ID!
  firstName: String!
  lastName: String!
  ESNCountry: String
  ESNSection: String
}

type UserFavoriteSession @model @auth(rules: [{allow: owner}]) {
  id: ID!
  sessionId: String!
}

type Venue @model @auth(rules: [{allow: private, operations: [read]}]) {
  id: ID!
  name: String!
  description: String
  longitude: Float
  latitude: Float
  imageURL: AWSURL
}

type Speaker @model @auth(rules: [{allow: private, operations: [read]}]) {
  id: ID!
  name: String!
  sessions: [Session] @manyToMany(relationName: "SessionSpeaker")
  organization: String
  title: String
  description: String
  imageURL: AWSURL
}

enum SessionType {
  PARTNER
  WORKSHOP
  SMALL_SESSION
  KEYNOTE
}

type Session @model @auth(rules: [{allow: private, operations: [read]}]) {
  id: ID!
  name: String!
  description: String
  type: SessionType!
  startsAt: AWSDateTime!
  endsAt: AWSDateTime!
  Speakers: [Speaker] @manyToMany(relationName: "SessionSpeaker")
  Venue: Venue! @hasOne
}
 